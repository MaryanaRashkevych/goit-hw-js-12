{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export function appendHitsMarkup(data, container) {\n  const markup = data\n    .map(\n      item =>\n        `<li class=\"gallery-item\">\n          <a href=\"${item.largeImageURL}\">\n            <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" width=\"360\" height=\"200\"/>\n            <div class=\"text-content-box\">\n                <p class=\"image-text\"><span class=\"image-title\">Likes</span> ${item.likes}</p>\n                <p class=\"image-text\"><span class=\"image-title\">Views</span> ${item.views}</p>\n                <p class=\"image-text\"><span class=\"image-title\">Comments</span> ${item.comments}</p>\n                <p class=\"image-text\"><span class=\"image-title\">Downloads</span> ${item.downloads}</p>\n            </div>\n        </a>\n      </li>`\n    )\n    .join('');\n\n  container.insertAdjacentHTML('beforeend', markup);\n}\n\nexport function clearHitsContainer(container) {\n  container.innerHTML = '';\n}\n\n\n\n\n\n\n// export function loaderF() {                                  // Створюємо лоадер\n//   const spanElement = document.createElement('span');\n//   areaForLoader.appendChild(spanElement);\n//   spanElement.classList.add('loader');\n// }\n\n// export function spanElementRem() {                           // Видаляємо лоадер\n//   const loaderF = document.querySelector('.loader');\n//   loaderF.remove();\n// }\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport class ImagesApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchImages() {\n    const url = `${BASE_URL}?key=43036736-59573289802154025d43bab67&q=${this.searchQuery}&lang=en&per_page=15&Page=${this.page}`;\n\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.total === 0) {\n          onError();\n        }\n\n        this.incrementPage();\n        return data.hits;\n      });\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n\nexport function onError(error) {\n  iziToast.show({\n    message: `Sorry, there are no images matching <br> your search query. Please, try again!`,\n    position: 'topCenter',\n    timeout: 5000,\n    backgroundColor: '#ef4040',\n    messageColor: '#ffffff',\n    messageSize: '12',\n    close: true,\n    closeOnEscape: true,\n    progressBarColor: '#B51B1B',\n    progressBar: true,\n    layout: 2,\n    maxWidth: 432,\n    maxHeigth: 88,\n    animateInside: true,\n    iconUrl: './img/x-octagon.svg',\n    transitionIn: 'fadeInRight',\n    transitionOut: 'fadeOutRight',\n  });\n}\n\n\n\n// export function checkInputValidity() {                   // Перевірка валідності запиту\n//   fetchImages()\n//     .then(images => {\n//       if (wordOfUser === '') {\n//         iziToast.show({\n//           color: 'red',\n//           message: `Sorry, the input field must be filled in to start the photo search.`,\n//           position: 'topCenter',\n//         });\n//       } else if (images.length === 0) {\n//         iziToast.show({\n//           color: 'red',\n//           message: `Sorry, there are no images matching your search query. Please try again!`,\n//           position: 'topCenter',\n//         });\n//       } else {\n//         renderImg(images);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//     .finally(() => spanElementRem());\n// }\n\n\n","import { appendHitsMarkup, clearHitsContainer } from './js/render-functions';\nimport { ImagesApiService, onError } from './js/pixabay-api';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  searchForm: document.querySelector('.js-search-form'),\n  waitingText: document.querySelector('.js-waiting-text'),\n  imagesContainer: document.querySelector('.js-images-container'),\n};\n\nconst imagesApiService = new ImagesApiService();\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  refs.waitingText.style.display = 'block';\n\n  imagesApiService.query = e.currentTarget.elements.query.value;\n  imagesApiService.resetPage();\n\n  if (imagesApiService.query === '') {\n    onError();\n    clearWaitingText();\n    clearHitsContainer(refs.imagesContainer);\n    return;\n  }\n\n  imagesApiService\n    .fetchImages()\n    .then(hits => {\n      clearWaitingText();\n      clearHitsContainer(refs.imagesContainer);\n      appendHitsMarkup(hits, refs.imagesContainer);\n      initializeSimpleLightbox();\n    })\n    .catch(error => {\n      onError(error);\n    });\n\n  refs.searchForm.reset();\n}\n\nfunction clearWaitingText() {\n  refs.waitingText.style.display = 'none';\n}\n\nfunction initializeSimpleLightbox() {\n  const simpleLightbox = new SimpleLightbox('.images a', {\n    captionPosition: 'bottom',\n    captionDelay: 250,\n    captionsData: 'alt',\n  });\n  simpleLightbox.refresh();\n}\n\n\n\n\n// import iziToast from 'izitoast';                                  // Бібліотека для повідомлень\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// import SimpleLightbox from 'simplelightbox';                      // Бібліотека для галереї\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import { checkInputValidity } from './js/pixabay-api';\n// import { fetchImages } from './js/pixabay-api';\n// import { renderImg } from './js/render-functions';\n// import { loaderF } from './js/render-functions';\n// import { spanElementRem } from './js/render-functions';\n\n// const inputOfWords = document.querySelector('.inputOfWords');     // Інпут\n// const buttonForInput = document.querySelector('.buttonForInput'); // Кнопка\n// const userList = document.querySelector('.userList');             // Галерея\n// const areaForLoader = document.querySelector('.areaForLoader');   // Лоадер\n\n// let wordOfUser = '';\n// let imagesLength = '';\n\n// const lightbox = new SimpleLightbox('.gallery a', {   // Великі картинки \n//   captionDelay: 250,\n//   captionsData: 'alt',\n// });\n\n// buttonForInput.addEventListener('click', event => {   // Надсилання запиту на сервер\n//   loaderF();\n//   event.preventDefault();\n//   userList.innerHTML = '';\n//   setTimeout(() => {\n//     wordOfUser = inputOfWords.value.trim();\n//     checkInputValidity();\n//   }, 2000);\n// });\n\n// function checkInputValidity() {                   // Перевірка валідності запиту\n//   fetchImages()\n//     .then(images => {\n//       if (wordOfUser === '') {\n//         iziToast.show({\n//           color: 'red',\n//           message: `Sorry, the input field must be filled in to start the photo search.`,\n//           position: 'topCenter',\n//         });\n//       } else if (images.length === 0) {\n//         iziToast.show({\n//           color: 'red',\n//           message: `Sorry, there are no images matching your search query. Please try again!`,\n//           position: 'topCenter',\n//         });\n//       } else {\n//         renderImg(images);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//     .finally(() => spanElementRem());\n// }\n\n// function renderImg(images) {                        // Рендар фото в браузері\n//   imagesLength = images.length;\n\n//   const markupImg = images                          \n//     .map(image => {\n//       return `<div class=\"blockForAllElements\">\n//           <li>\n//           <a href=${image.largeImageURL} download=\"false\">\n//           <img src=${image.webformatURL} alt = \"${image.tags}\" class = \"imgOfUser\">\n//           </a>\n//           </li>\n//           <div class = \"divForDescription\"> \n//           <ul class=\"blockOfInfo\"> \n//             <li class=\"title\">Likes</li>\n//             <li class=\"info\">${image.likes}</li>\n//           </ul>\n//           <ul class=\"block\">\n//             <li class=\"title\">Views</li>\n//             <li class=\"info\">${image.views}</li>\n//           </ul>\n//           <ul class=\"block\">\n//             <li class=\"title\">Comments</li>\n//             <li class=\"info\">${image.comments}</li>\n//           </ul>\n//           <ul class=\"block\">\n//             <li class=\"title\">Downloads</li>\n//             <li class=\"info\">${image.downloads}</li>\n//           </ul>\n//           </div>\n//         </div>`;\n//     })\n//     .join('');\n//   userList.insertAdjacentHTML('beforeend', markupImg);\n\n//   lightbox.refresh();\n// }\n\n// function fetchImages() {                            // Запит на сервер для отримання фото\n//   return fetch(\n//     `https://pixabay.com/api/?key=43036736-59573289802154025d43bab67&q=${wordOfUser}&image_type=photo&per_page=15&orientation=horizontal&safesearch=true`\n//   )\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     })\n//     .then(data => data.hits);\n// }\n\n// function loaderF() {                                  // Створюємо лоадер\n//   const spanElement = document.createElement('span');\n//   areaForLoader.appendChild(spanElement);\n//   spanElement.classList.add('loader');\n// }\n\n// function spanElementRem() {                           // Видаляємо лоадер\n//   const loaderF = document.querySelector('.loader');\n//   loaderF.remove();\n// }"],"names":["appendHitsMarkup","data","container","markup","item","clearHitsContainer","BASE_URL","ImagesApiService","url","response","onError","newQuery","error","iziToast","refs","imagesApiService","onSearch","e","clearWaitingText","hits","initializeSimpleLightbox","SimpleLightbox"],"mappings":"6vBAAO,SAASA,EAAiBC,EAAMC,EAAW,CAChD,MAAMC,EAASF,EACZ,IACCG,GACE;AAAA,qBACaA,EAAK,aAAa;AAAA,wBACfA,EAAK,YAAY,UAAUA,EAAK,IAAI;AAAA;AAAA,+EAEmBA,EAAK,KAAK;AAAA,+EACVA,EAAK,KAAK;AAAA,kFACPA,EAAK,QAAQ;AAAA,mFACZA,EAAK,SAAS;AAAA;AAAA;AAAA,YAI5F,EACA,KAAK,EAAE,EAEVF,EAAU,mBAAmB,YAAaC,CAAM,CAClD,CAEO,SAASE,EAAmBH,EAAW,CAC5CA,EAAU,UAAY,EACxB,CCpBA,MAAMI,EAAW,2BAEV,MAAMC,CAAiB,CAC5B,aAAc,CACZ,KAAK,YAAc,GACnB,KAAK,KAAO,CACb,CAED,aAAc,CACZ,MAAMC,EAAM,GAAGF,CAAQ,6CAA6C,KAAK,WAAW,6BAA6B,KAAK,IAAI,GAE1H,OAAO,MAAME,CAAG,EACb,KAAKC,GAAYA,EAAS,MAAM,EAChC,KAAKR,IACAA,EAAK,QAAU,GACjBS,IAGF,KAAK,cAAa,EACXT,EAAK,KACb,CACJ,CAED,eAAgB,CACd,KAAK,MAAQ,CACd,CAED,WAAY,CACV,KAAK,KAAO,CACb,CAED,IAAI,OAAQ,CACV,OAAO,KAAK,WACb,CAED,IAAI,MAAMU,EAAU,CAClB,KAAK,YAAcA,CACpB,CACH,CAEO,SAASD,EAAQE,EAAO,CAC7BC,EAAS,KAAK,CACZ,QAAS,iFACT,SAAU,YACV,QAAS,IACT,gBAAiB,UACjB,aAAc,UACd,YAAa,KACb,MAAO,GACP,cAAe,GACf,iBAAkB,UAClB,YAAa,GACb,OAAQ,EACR,SAAU,IACV,UAAW,GACX,cAAe,GACf,QAAS,sBACT,aAAc,cACd,cAAe,cACnB,CAAG,CACH,CCzDA,MAAMC,EAAO,CACX,WAAY,SAAS,cAAc,iBAAiB,EACpD,YAAa,SAAS,cAAc,kBAAkB,EACtD,gBAAiB,SAAS,cAAc,sBAAsB,CAChE,EAEMC,EAAmB,IAAIR,EAE7BO,EAAK,WAAW,iBAAiB,SAAUE,CAAQ,EAEnD,SAASA,EAASC,EAAG,CAQnB,GAPAA,EAAE,eAAc,EAEhBH,EAAK,YAAY,MAAM,QAAU,QAEjCC,EAAiB,MAAQE,EAAE,cAAc,SAAS,MAAM,MACxDF,EAAiB,UAAS,EAEtBA,EAAiB,QAAU,GAAI,CACjCL,IACAQ,IACAb,EAAmBS,EAAK,eAAe,EACvC,MACD,CAEDC,EACG,YAAa,EACb,KAAKI,GAAQ,CACZD,IACAb,EAAmBS,EAAK,eAAe,EACvCd,EAAiBmB,EAAML,EAAK,eAAe,EAC3CM,GACN,CAAK,EACA,MAAMR,GAAS,CACdF,EAAa,CACnB,CAAK,EAEHI,EAAK,WAAW,OAClB,CAEA,SAASI,GAAmB,CAC1BJ,EAAK,YAAY,MAAM,QAAU,MACnC,CAEA,SAASM,GAA2B,CACX,IAAIC,EAAe,YAAa,CACrD,gBAAiB,SACjB,aAAc,IACd,aAAc,KAClB,CAAG,EACc,QAAO,CACxB"}